version: '3'

networks: 
    laravel:
        driver: bridge

services: 
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: dockravel-app
        restart: unless-stopped
        tty: true
        working_dir: /var/www/app
        volumes: 
            - ./src:/var/www/app
        ports: 
            - "9000:9000"
        networks: 
            - laravel
        depends_on:
            - db
            - redis

    nginx:
        image: nginx:alpine
        container_name: dockravel-nginx
        restart: unless-stopped
        tty: true
        ports:
            - "8080:80"
        volumes: 
            - ./src:/var/www/app
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - app
            - db
        networks: 
            - laravel

    db:
        image: mysql
        container_name: dockravel-mysql
        restart: always
        tty: true
        ports: 
            - "3306:3306"
        volumes: 
            - ./mysql:/var/lib/mysql
        environment: 
            MYSQL_DATABASE: `${DB_NAME}`
            MYSQL_USER: ${DB_ROOT_USER}
            MYSQL_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks: 
            - laravel

    redis:
        image: redis:latest
        container_name: dockravel-redis
        restart: unless-stopped
        volumes:
            - redisdata:/data
        ports:
            - '6379:6379'

    mailhog:
        image: mailhog/mailhog
        container_name: dockravel-mailhog
        ports:
            - '8025:8025'
            - '1025:1025'

    phpmyadmin:
        depends_on:
            - db
        image: phpmyadmin/phpmyadmin
        container_name: dockravel-phpmyadmin
        restart: always
        ports:
            - '8086:80'
        environment:
            PMA_HOST: mysql
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} 
        networks:
            - laravel

volumes:
  dbdata:
  redisdata: